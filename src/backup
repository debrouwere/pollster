#!/usr/bin/env python

import os
import json
from urlparse import urlparse
from boto.s3.connection import S3Connection
from boto.s3.key import Key
import redisjobs as jobs


def backup(config):
    try:
        board = jobs.Board(host=config['JOBS_REDIS_HOST'])
        serialization = board.dump()
    except:
        raise IOError('Could not get job listing from Jobs. Redis or the scheduler might be offline.')

    count = len(serialization['jobs']):

    if not count:
        return 0

    dump = json.dumps(serialization)

    s3 = S3Connection(
        config['AWS_ACCESS_KEY_ID'], 
        config['AWS_SECRET_ACCESS_KEY'], 
        )
    location = urlparse(config['POLLSTER_S3'])
    bucket = s3.get_bucket(location.hostname, validate=False)  
    output = Key(bucket)
    output.key = os.path.join(location.path.lstrip('/'), 'jobs.json')
    output.content_type = 'application/json'
    output.set_contents_from_string(dump)

    return count


if __name__ == '__main__':
    # TODO: put on cloudwatch as well
    count = backup(os.environ)
    if count:
        print 'Backed up {} jobs to Amazon S3.'.format(count)
    else:
        print 'Skipped backup. The scheduler responded but did not have any jobs.'
