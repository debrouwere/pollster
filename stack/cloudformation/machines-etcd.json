{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "EtcdIngress2379": {
      "Properties": {
        "GroupName": {
          "Ref": "CoreOSSecurityGroup"
        },
        "ToPort": 2379,
        "FromPort": 2379,
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "CoreOSSecurityGroup",
            "GroupId"
          ]
        }
      },
      "Type": "AWS::EC2::SecurityGroupIngress"
    },
    "EtcdIngress7001": {
      "Properties": {
        "GroupName": {
          "Ref": "CoreOSSecurityGroup"
        },
        "ToPort": 7001,
        "FromPort": 7001,
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "CoreOSSecurityGroup",
            "GroupId"
          ]
        }
      },
      "Type": "AWS::EC2::SecurityGroupIngress"
    },
    "CoreOSSecurityGroup": {
      "Properties": {
        "GroupDescription": "Jobs",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": 22,
            "ToPort": 22,
            "IpProtocol": "tcp"
          },
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": 80,
            "ToPort": 80,
            "IpProtocol": "tcp"
          }
        ]
      },
      "Type": "AWS::EC2::SecurityGroup"
    },
    "RedisIngress6379": {
      "Properties": {
        "GroupName": {
          "Ref": "CoreOSSecurityGroup"
        },
        "ToPort": 6379,
        "FromPort": 6379,
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "CoreOSSecurityGroup",
            "GroupId"
          ]
        }
      },
      "Type": "AWS::EC2::SecurityGroupIngress"
    },
    "EtcdIngress2380": {
      "Properties": {
        "GroupName": {
          "Ref": "CoreOSSecurityGroup"
        },
        "ToPort": 2380,
        "FromPort": 2380,
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "CoreOSSecurityGroup",
            "GroupId"
          ]
        }
      },
      "Type": "AWS::EC2::SecurityGroupIngress"
    },
    "EtcdIngress4001": {
      "Properties": {
        "GroupName": {
          "Ref": "CoreOSSecurityGroup"
        },
        "ToPort": 4001,
        "FromPort": 4001,
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "CoreOSSecurityGroup",
            "GroupId"
          ]
        }
      },
      "Type": "AWS::EC2::SecurityGroupIngress"
    },
    "CoreOSServerAutoScale": {
      "Properties": {
        "MaxSize": 10,
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "AWS::StackName"
            },
            "PropagateAtLaunch": true
          }
        ],
        "AvailabilityZones": {
          "Fn::GetAZs": {
            "Ref": "AWS::Region"
          }
        },
        "DesiredCapacity": {
          "Ref": "ClusterSize"
        },
        "MinSize": 3,
        "LaunchConfigurationName": {
          "Ref": "CoreOSServerLaunchConfig"
        }
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup"
    },
    "CoreOSServerLaunchConfig": {
      "Properties": {
        "KeyName": {
          "Ref": "KeyPair"
        },
        "InstanceType": "t2.micro",
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "SecurityGroups": [
          {
            "Ref": "CoreOSSecurityGroup"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#cloud-config\n\ncoreos:\n  update:\n    reboot-strategy: off\n  units:\n    - name: etcd.service\n      command: start\n    - name: fleet.service\n      command: start\n  etcd:\n    addr: $private_ipv4:4001\n    peer-addr: $private_ipv4:7001\n    cluster-active-size: 5\n    cluster-remove-delay: 180.0\n    discovery: ",
                {
                  "Ref": "DiscoveryURL"
                }
              ]
            ]
          }
        }
      },
      "Type": "AWS::AutoScaling::LaunchConfiguration"
    },
    "CoreOSUser": {
      "Type": "AWS::IAM::User"
    },
    "CoreOSAccessKey": {
      "Properties": {
        "UserName": {
          "Ref": "CoreOSUser"
        }
      },
      "Type": "AWS::IAM::AccessKey"
    }
  },
  "Description": "Jobs stack",
  "Parameters": {
    "KeyPair": {
      "Description": "The name of an existing EC2 Key Pair to allow SSH access to the instance.",
      "Type": "String"
    },
    "DiscoveryURL": {
      "Description": "An unique etcd2 cluster discovery URL. Grab a new token from https://discovery.etcd.io/new?size=n (Ignore the size parameter for etcd 0.4.x.)",
      "Type": "String"
    },
    "ClusterSize": {
      "Default": 3,
      "Description": "Number of nodes in your cluster",
      "Type": "Number",
      "MinValue": 3
    }
  },
  "Mappings": {
    "RegionMap": {
      "eu-central-1": {
        "AMI": "ami-fdd4c791"
      },
      "us-gov-west-1": {
        "AMI": "ami-05bc0164"
      },
      "ap-southeast-1": {
        "AMI": "ami-da67a0b9"
      },
      "sa-east-1": {
        "AMI": "ami-154af179"
      },
      "eu-west-1": {
        "AMI": "ami-55d20b26"
      },
      "us-east-1": {
        "AMI": "ami-37bdc15d"
      },
      "us-west-2": {
        "AMI": "ami-00ebfc61"
      },
      "ap-northeast-1": {
        "AMI": "ami-84e0c7ea"
      },
      "ap-southeast-2": {
        "AMI": "ami-f35b0590"
      },
      "us-west-1": {
        "AMI": "ami-27553a47"
      }
    }
  }
}
